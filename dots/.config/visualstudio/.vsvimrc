let mapleader=' ' 
set hlsearch 
set incsearch 
set ignorecase 
set smartcase
set number
set relativenumber 
set scrolloff=15 
set history=100000 
set clipboard=unnamed 
 
" Quit insert mode 
inoremap jj <Esc>
inoremap jk <Esc>
 
" Quit visual mode 
vnoremap v <Esc>
 
" Move to the start of line 
nnoremap H ^
vnoremap H ^
 
" Move to the end of line 
nnoremap L $
vnoremap L $
 
" Redo
nnoremap U <C-r>
 
" Yank to the end of line 
nnoremap Y y$
 
" Tab
nnoremap <S-Tab> <<
nnoremap <Tab> >>
vnoremap <Tab> >gv
vnoremap <S-Tab> <gv

" Window operation 
nnoremap <leader>wj <C-W>j
nnoremap <leader>wk <C-W>k
nnoremap <leader>wh <C-W>h
nnoremap <leader>wl <C-W>l
nnoremap <leader>ws <C-W>s
nnoremap <leader>wv <C-W>v
nnoremap <C-S-j> <C-W>j
nnoremap <C-S-k> <C-W>k
nnoremap <C-S-h> <C-W>h
nnoremap <C-S-l> <C-W>l

" clipboard
nnoremap d "_d
vnoremap d "_d
nnoremap D "_D
nnoremap s "_s
nnoremap S "_S
nnoremap c "_c
vnoremap c "_c
nnoremap C "_C
nnoremap x "_x
nnoremap X "_x

" Tab navigation
nnoremap tl gt
nnoremap th gT
nnoremap <C-h> gT<CR>
nnoremap <C-l> gt<CR>

" Save file
nnoremap <leader>fs :w<CR>| "fs (File Save)
nnoremap <leader>fS :vsc File.SaveAll<CR>| "fS (File SAVE) -- Save all files open

" ------------- Editor Specific -------------

" Jump around
nnoremap gd :vsc Edit.GoToDefinition<CR>| "gd (Go to Definition)
nnoremap gi :vsc Edit.GotoImplementation<CR>| "gi (Go to Implementation)
nnoremap gr :vsc Edit.FindAllReferences<CR>| "gr (Go to References)
nnoremap gp :vsc Edit.PeekDefinition<CR>| "gp (Go Peek)
nnoremap gn :vsc Edit.GoToNextLocation<CR>| "gn (Go Next)
nnoremap gN :vsc Edit.GoToPrevLocation<CR>| "gN (Go Previous) -- Uppercase N, go back.
vnoremap gn :vsc Edit.GoToNextLocation<CR>| "gn (Go Next)
vnoremap gN :vsc Edit.GoToPrevLocation<CR>| "gN (Go Previous) -- Uppercase N, go back.

" Error
nnoremap <leader>ne :vsc View.NextError<CR>| "ne (Next Error)
nnoremap <leader>nE :vsc View.PreviousError<CR>| "nE (Previous Error) -- Uppercase E, previous error.

" project search 
nnoremap <leader>se :vsc Edit.GoToAll<CR>| "se (Search Everything)
nnoremap <leader>sa :vsc Window.QuickLaunch<CR> "sa (Search All)
 
" Select Next Occurrence
inoremap <C-d> <Esc>:vsc Edit.InsertNextMatchingCaret<CR>
nnoremap <leader>d :vsc Edit.InsertNextMatchingCaret<CR>
vnoremap <leader>d :vsc Edit.InsertNextMatchingCaret<CR>
nnoremap <leader>D :vsc Edit.InsertCaretsatAllMatching<CR>

" Navigation
nnoremap <C-o> :vsc View.NavigateBackward<CR>
nnoremap <C-i> :vsc View.NavigateForward<CR>

" Use built-in search
nnoremap / :vsc Edit.Find<CR>
nnoremap <leader>/ / 

" Breakpoints
nnoremap <leader>bb :vsc Debug.ToggleBreakpoint<CR>| "bb (Breakpoint BreakPoint) -- ToggleBreak point, but reaching T is not ideal
nnoremap <leader>bv :vsc Debug.Breakpoints<CR>| "bv (Breakpoint View)
nnoremap <leader>bd :vsc Debug.DeleteAllBreakpoints<CR>| "bd (Breakpoint Delete) -- Delete All Breakpoints
nnoremap <leader>bD :vsc Debug.DisableAllBreakpoints<CR>| "bD (Breakpoint DISABLE) -- Disable all Breakpoints
nnoremap <leader>bE :vsc Debug.EnableAllBreakpoints<CR>| "bE (Breakpoint ENABLE) -- Enable all Breakpoints
nnoremap <leader>be :vsc Debug.EnableBreakpoint<CR>| "be (Breakpoint enable -- Enable current breakpoint
nnoremap <leader>bs :vsc Debug.Attach.SnapshotDebugger<CR>| "bs (Breakpoint Snapshot)

" Debug
nnoremap <leader>sd :vsc Debug.Start<CR>| "sd (Start Debug)
nnoremap <leader>sD :vsc Debug.StartWithoutDebugging<CR>| "sD (Start DEBUG) -- Uppercase D, don't debug.

" Build
nnoremap <leader>sb :vsc Build.RebuildSolution<CR>| "sb (Solution reBuild)
nnoremap <leader>sB :vsc Build.BuildSolution<CR>| "sB (Solution BUILD)

" tests
nnoremap <leader>tv :vsc TestExplorer.ShowTestExplorer<CR>| "tv (Test View)
nnoremap <leader>tr :vsc TestExplorer.RunAllTests<CR>| "tr (Test Run) -- Run all tests
nnoremap <leader>tc :vsc TestExplorer.RunAllTestsInContext<CR>| "tc (Test Current)
nnoremap <leader>tR :vsc TestExplorer.DebugAllTests<CR>| "tR (Test RUN) -- Run and Debug all tests
nnoremap <leader>tC :vsc TestExplorer.DebugAllTestsInContext<CR>| "tC (Test CURRENT) -- Run and Debug current test

" Refactor
nnoremap <leader>re :vsc Refactor.Rename<cr>| "re (Refactor Element)

" Terminal
nnoremap <leader>vt Vy<CR>:vsc View.Terminal<CR>| "vt (View Terminal)

" NERDTree
nnoremap <leader>ff :NERDTreeFind<CR>| "ff (Find File)
nnoremap <leader>fe :vsc View.SolutionExplorer<CR>| "fe (File Explorer)

" Clear search
nnoremap <leader>cs :nohlsearch<CR>
 
" Manage tabs
nnoremap <leader>q :q<CR>
nnoremap <leader>kt :vsc File.CloseAllButThis<CR>| "kt (Keep Tab)
nnoremap <leader>Q :vsc Window.CloseAllDocuments<CR>
nnoremap <leader>kT :vsc Window.KeepTabOpen<CR>| "kT (Keep TAB) -- Keep tab that is in preview

" Comment
nnoremap <leader>kc :vsc Edit.ToggleLineComment<CR>
vnoremap <leader>kc :vsc Edit.ToggleLineComment<CR>

" Duplicate line
nnoremap <leader>dl :vsc Edit.Duplicate<CR>| "dl (Duplicate Line)
vnoremap <leader>dl :vsc Edit.Duplicate<CR>| "dl (Duplicate Line)

" Expand selection
nnoremap <leader>vv :vsc Edit.ExpandSelectiontoContainingBlock<CR>
vnoremap <leader>vv :vsc Edit.ExpandSelectiontoContainingBlock<CR>

" Cursor
nnoremap <C-S-A-Up> <C-A-Up>
nnoremap <C-S-A-Down> <C-A-Down>
nnoremap <A-Up> :vsc Edit.MoveSelectedLinesUp<CR>
nnoremap <A-Down> :vsc Edit.MoveSelectedLinesDown<CR>

nnoremap <C-S-A-k> <C-A-Up>
nnoremap <C-S-A-j> <C-A-Down>
nnoremap <A-k> :vsc Edit.MoveSelectedLinesUp<CR>
nnoremap <A-j> :vsc Edit.MoveSelectedLinesDown<CR>

" FSharp
nnoremap <leader>fi :vsc EditorContextMenus.CodeWindow.ExecuteInInteractive<CR>| "fi (Fsharp Interactive)
nnoremap <leader>fl :vsc EditorContextMenus.CodeWindow.ExecuteLineInInteractive<CR>| "fl (Fsharp Line)
vnoremap <leader>fi :vsc EditorContextMenus.CodeWindow.ExecuteInInteractive<CR>| "fi (Fsharp Interactive)
vnoremap <leader>fl :vsc EditorContextMenus.CodeWindow.ExecuteLineInInteractive<CR>| "fi (Fsharp Interactive)