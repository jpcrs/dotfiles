let mapleader=' ' 
set hlsearch 
set incsearch 
set ignorecase 
set smartcase
set number
set relativenumber 
set scrolloff=15 
set history=100000 
set clipboard=unnamed 
set iskeyword+=-

" Quit insert mode 
inoremap jj <Esc>
inoremap jk <Esc>
 
" Quit visual mode 
vnoremap v <Esc>
 
" Move to the start of line 
nnoremap H ^
vnoremap H ^
 
" Move to the end of line 
nnoremap L $
vnoremap L $
 
" Redo
nnoremap U <C-r>
 
" Yank to the end of line 
nnoremap Y y$
 
" Tab
nnoremap <Tab> >>
nnoremap <S-Tab> <<
vnoremap <Tab> >gv
vnoremap <S-Tab> <gv

" clipboard
nnoremap d "_d
vnoremap d "_d
nnoremap D "_D
nnoremap s "_s
nnoremap S "_S
nnoremap c "_c
vnoremap c "_c
nnoremap C "_C
nnoremap x "_x
nnoremap X "_x
xnoremap p pgvy

" Tab navigation
nnoremap tl gt
nnoremap th gT
nnoremap <C-h> gT<CR>
nnoremap <C-l> gt<CR>

" Save file
nnoremap <leader>fs :w<CR>
nnoremap <leader>fS :vsc workbench.action.files.saveFiles<CR>

" ------------- Editor Specific -------------

" Workspace
nnoremap <leader>wa :vsc workbench.action.addRootFolder<CR>
nnoremap <leader>wc :vsc workbench.action.files.openFolderViaWorkspace<CR>
nnoremap <leader>wr :vsc workbench.action.removeRootFolder<CR>
nnoremap <leader>wC :vsc workbench.action.closeFolder<CR>

" Jump around
nnoremap gd :vsc editor.action.revealDefinition<CR> 
nnoremap gi :vsc editor.action.goToImplementation<CR>
nnoremap gr :vsc references-view.findReferences<CR>
nnoremap gp :vsc editor.action.peekDefinition<CR>
" nnoremap gn :vsc goToNextReference<CR>
" vnoremap gn :vsc goToNextReference<CR>
" nnoremap gN :vsc goToPreviousReference<CR>
" vnoremap gN :vsc goToPreviousReference<CR>

" LSP
" nnoremap <leader>le :vsc editor.action.marker.next<CR> -- Moved to settings.json
" nnoremap <leader>lE :vsc editor.action.marker.prev<CR> -- Moved to settings.json
" nnoremap <leader>lne :vsc editor.action.marker.nextInFiles<CR> -- Moved to settings.json
" nnoremap <leader>lnE :vsc editor.action.marker.prevInFiles<CR> -- Moved to settings.json
nnoremap <leader>lr :vsc editor.action.rename<cr>
nnoremap <leader>la :vsc editor.action.quickFix<CR>
nnoremap <leader>lm :vsc editor.action.triggerParameterHints<CR>
nnoremap <leader>lh :vsc editor.action.showDefinitionPreviewHover<CR>
nnoremap <leader>ls :vsc workbench.action.gotoSymbol<CR>
nnoremap <leader>lS :vsc workbench.action.showAllSymbols<CR>
nnoremap <leader>lp :vsc workbench.panel.markers.view.focus<CR>

" project search 
nnoremap <leader>sr :vsc workbench.action.openRecent<CR> 
nnoremap <leader>sf :vsc workbench.action.quickOpen<CR> 
nnoremap <leader>se :vsc workbench.action.quickOpen<CR> 
nnoremap <leader>sa :vsc workbench.action.showCommands<CR> 

" Git
nnoremap <leader>gB :vsc gitlens.toggleFileBlame<CR>
nnoremap <leader>gd :vsc gitlens.diffWithPrevious<CR>
nnoremap <leader>gb :vsc gitlens.views.switchToAnotherBranch<CR>
nnoremap <leader>gc :vsc gitlens.compareWorkingWith<CR>
nnoremap <leader>gw :vsc gitlens.gitCommands.worktree<CR>

" Select Next Occurrence - Current broken in .vimrc, have to set in settings.json with:
" "vim.normalModeKeyBindingsNonRecursive": [
"     {
"         "before": ["<leader>", "d"],
"         "commands": [
"             "editor.action.addSelectionToNextFindMatch"
"         ]
"     },
"     {
"         "before": ["<leader>", "D"],
"         "commands": [
"             "editor.action.selectHighlights"
"         ]
"     },
" ],
" "vim.visualModeKeyBindingsNonRecursive": [
"     {
"         "before": ["<C-d>"],
"         "commands": [
"             "editor.action.addSelectionToNextFindMatch"
"         ]
"     },
"     {
"         "before": ["<leader>", "d"],
"         "commands": [
"             "editor.action.addSelectionToNextFindMatch"
"         ]
"     },
"     {
"         "before": ["<leader>", "D"],
"         "commands": [
"             "editor.action.selectHighlights"
"         ]
"     },
" ],
" "vim.insertModeKeyBindings": [
"     {
"         "before": ["<C-d>"],
"         "commands": [
"             "editor.action.addSelectionToNextFindMatch"
"         ]
"     },
"     {
"         "before": ["<C-d>"],
"         "commands": [
"             "editor.action.selectHighlights"
"         ]
"     },
" ],
" inoremap <C-d> <Esc>:vsc editor.action.addSelectionToNextFindMatch<CR>
" nnoremap <leader>d :vsc editor.action.addSelectionToNextFindMatch<CR>
" vnoremap <leader>d :vsc editor.action.addSelectionToNextFindMatch<CR>
" inoremap <leader>d :vsc editor.action.addSelectionToNextFindMatch<CR>
" nnoremap <leader>D :vsc editor.action.selectHighlights<CR>
" vnoremap <leader>D :vsc editor.action.selectHighlights<CR>
" inoremap <leader>D :vsc editor.action.selectHighlights<CR>
nnoremap <leader>d gb
vnoremap <leader>d gb

" Navigation
nnoremap <C-o> :vsc workbench.action.navigateBack<CR>
nnoremap <C-i> :vsc workbench.action.navigateForward<CR>

" use built-in search
nnoremap / :vsc actions.find<CR> 
nnoremap <leader>/ / 

" Breakpoints
nnoremap <leader>bb :vsc editor.debug.action.toggleBreakpoint<CR> 
nnoremap <leader>bd :vsc workbench.debug.viewlet.action.removeAllBreakpoints<CR> 
nnoremap <leader>bD :vsc workbench.debug.viewlet.action.disableAllBreakpoints<CR> 
nnoremap <leader>be :vsc workbench.debug.viewlet.action.enableAllBreakpoints<CR> 

" Debug
nnoremap <leader>sD :vsc workbench.action.debug.start<CR>
nnoremap <leader>sd :vsc workbench.action.debug.run<CR>

" Build
nnoremap <leader>sb :vsc workbench.action.tasks.build<CR>

" tests
nnoremap <leader>tv :vsc test-explorer.focus<CR> 
nnoremap <leader>tr :vsc dotnet-test-explorer.runAllTests<CR> 
nnoremap <leader>tc :vsc dotnet-test-explorer.runTestInContext<CR> 
nnoremap <leader>tA :vsc dotnet-test-explorer.debugTest<CR> 
" nnoremap <leader>tC :vsc test-explorer.debug-test-at-cursor<CR> 

" Refactor
nnoremap <leader>re :vsc editor.action.rename<cr>

" Terminal
nnoremap <leader>vt Vy<CR>:vsc workbench.action.terminal.toggleTerminal<CR> 

" File Tree
" nnoremap <leader>ff :NERDTreeFind<CR>
nnoremap <leader>fe :vsc workbench.view.explorer<CR>

" Clear search
nnoremap <leader>cs :nohlsearch<CR>
 
" Manage tabs
nnoremap <leader>q :q<CR>
nnoremap <leader>kt :vsc workbench.action.closeOtherEditors<CR>
nnoremap <leader>Q  :vsc workbench.action.closeAllEditors<CR>
" nnoremap <leader>kT  :vsc Window.KeepTabOpen<CR>

" Duplicate line
nnoremap <leader>dl :vsc editor.action.duplicateSelection<CR>
vnoremap <leader>dl :vsc editor.action.duplicateSelection<CR>

" Expand Selection
nnoremap <leader>vv vaf<CR>
vnoremap <leader>vv af<CR>

" Comment
nnoremap <leader>kc :vsc editor.action.commentLine<CR>
vnoremap <leader>kc :vsc editor.action.commentLine<CR>

" Cursor -- Doesn't work great on vscode vim
" nnoremap <C-A-k> :vsc editor.action.insertCursorAbove<CR>
" nnoremap <C-A-j> :vsc editor.action.insertCursorBelow<CR>
" inoremap <C-A-k> :vsc editor.action.insertCursorAbove<CR>
" inoremap <C-A-j> :vsc editor.action.insertCursorBelow<CR>
" vnoremap <C-A-k> :vsc editor.action.insertCursorAbove<CR>
" vnoremap <C-A-j> :vsc editor.action.insertCursorBelow<CR>
" nnoremap <A-j> :vsc editor.action.moveLinesDownAction<CR>
" nnoremap <A-k> :vsc editor.action.moveLinesUpAction<CR>
"Use this:
"    {
"        "key": "ctrl+shift+alt+j",
"        "command": "cursorColumnSelectDown",
"        "when": "editorColumnSelection && textInputFocus"
"    },

" Leetcode
nnoremap <leader>Ls :vsc leetcode.searchProblem<CR>
nnoremap <leader>Lp :vsc leetcode.showProblem<CR>
nnoremap <leader>Lh :vsc leetcode.showSolution<CR>
nnoremap <leader>Lt :vsc leetcode.testSolution<CR>
nnoremap <leader>Lv :vsc leetCodeExplorer.focus<CR>

" FSharp
nnoremap <leader>fi :vsc fsi.SendSelection<CR>
nnoremap <leader>fo :vsc fsi.SendFile<CR>
nnoremap <leader>fl :vsc fsi.SendLine<CR>
vnoremap <leader>fi :vsc fsi.SendSelection<CR>
vnoremap <leader>fo :vsc fsi.SendFile<CR>
vnoremap <leader>fl :vsc fsi.SendLine<CR>

" Jump
nnoremap <leader>j :vsc findJump.activate<CR>

" Side bar visibility
nnoremap <leader>vs :vsc workbench.action.toggleSidebarVisibility<CR>

" Error Lens
nnoremap <leader>el :vsc errorLens.toggle<CR>